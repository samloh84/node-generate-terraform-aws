{%- set vpc_attributes = ['arn', 'assign_generated_ipv6_cidr_block', 'cidr_block', 'default_network_acl_id', 'default_route_table_id', 'default_security_group_id', 'enable_classiclink', 'enable_classiclink_dns_support', 'enable_dns_hostnames', 'enable_dns_support', 'id', 'instance_tenancy', 'ipv6_association_id', 'ipv6_cidr_block', 'main_route_table_id', 'owner_id', 'tags'] -%}
{%-  for vpc_attribute in vpc_attributes %}

output "vpc_{{ vpc_attribute }}" {
	value = aws_vpc.main.{{ vpc_attribute }}
}
{%- endfor %}

{%- set security_group_attributes = ['arn', 'description', 'egress', 'id', 'ingress', 'name', 'owner_id', 'revoke_rules_on_delete', 'tags', 'vpc_id'] -%}
{%- for network_tier_name, network_tier in network_tiers %}
{% for security_group_attribute in security_group_attributes %}

output "security_group_{{ network_tier_name }}_tier_{{ security_group_attribute }}" {
	value = aws_security_group.{{ network_tier_name }}_tier.{{ security_group_attribute }}
}
{%- endfor %}
{%- endfor %}

{%- set subnet_attributes = ['arn', 'assign_ipv6_address_on_creation', 'availability_zone', 'availability_zone_id', 'cidr_block', 'id', 'ipv6_cidr_block', 'ipv6_cidr_block_association_id', 'map_public_ip_on_launch', 'owner_id', 'tags', 'vpc_id'] -%}
{%- for network_tier_name, network_tier in network_tiers %}

output "{{ network_tier_name }}_tier_cidr_block" {
	value = local.{{ network_tier_name }}_tier_cidr_block
}

{%- for availability_zone in availability_zones %}
{%- for subnet_attribute in subnet_attributes %}

output "subnet_{{ network_tier_name }}_tier_{{ availability_zone }}_{{ subnet_attribute }}" {
	value = aws_subnet.{{ network_tier_name }}_tier_{{ availability_zone }}.{{ subnet_attribute }}
}
{%- endfor %}
{%- endfor %}

output "subnet_{{ network_tier_name }}_tier_ids" {
    value = [
        {%- for availability_zone in availability_zones %}
        aws_subnet.{{ network_tier_name }}_tier_{{ availability_zone }}.id{{ ',' if not loop.last }}
        {%- endfor %}
    ]
}

{%- endfor %}
